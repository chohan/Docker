FROM ubuntu:22.04
MAINTAINER Salah Chohan
LABEL version="1.0" Location="Canada/Toronto" type="ACCS"

RUN apt-get update -y && \
	apt-get install -y \
	apt-utils openssh* sshpass vim tree tmux multitail \
	build-essential cmake pkg-config ca-certificates libaio1 usbutils

RUN	echo -e "\n\n\n### Net Tools ####\n" && \
	apt-get install -y \
	git wget curl arp-scan ipcalc htop nmap netcat net-tools iftop iptables ngrep socat tcpdump telnet traceroute iputils-ping iproute2
# unable to locate ncat dhclient route websocat wireshark

RUN	echo -e "\n\n\n### SSH/OpenSSL ####\n"
COPY id_rsa.pub /root/.ssh/authorized_keys
RUN	sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \
	echo 'root:toor' | chpasswd && \
	echo "service ssh restart" >> /start.sh && \
	chmod +x /start.sh

RUN	echo -e "\n\n\n### Python ####\n" && \	
	apt-get install -y python3 python3-pip && \
	pip3 install redis

RUN	echo -e "\n\n\n### NodeJS & tsc ####\n" && \
	curl -sL https://deb.nodesource.com/setup_20.x | bash - && \
	apt-get install -y nodejs && \
	npm install -g typescript && \
	npm install -g --save-dev @types/jquery

RUN	echo -e "\n\n\n### Redis ####\n" && \
	apt-get install -y redis && \
	sed -i 's/^bind 127.0.0.1 ::1/bind 127.0.0.1/' /etc/redis/redis.conf && \
	echo "service redis-server start" >> /start.sh
#	echo "/bin/bash -c 'nohup redis-server &'" >> /start.sh && \
	
RUN	echo -e "\n\n\n### RTL-SDR ####\n" && \
	# apt-get install librtlsdr-dev
	apt install -y libusb-1.0-0-dev && \
	cd /tmp && \
	git clone git://git.osmocom.org/rtl-sdr.git && \
	mkdir rtl-sdr/build && \
	cd rtl-sdr/build && \
	cmake ../ -DINSTALL_UDEV_RULES=ON -DDETACH_KERNEL_DRIVER=ON && \
	make && \
	make install && \
	ldconfig
	
RUN	echo -e "\n\n\n### OpenSky ####\n" && \
	cd /tmp && \
	git clone https://github.com/openskynetwork/opensky-api && \
	cd opensky-api/python && \
	python3 setup.py install

# clean up
#RUN apt-get install -y tzdata
RUN	apt-get update -y && apt-get upgrade -y && \
	apt-get clean && rm -rf /var/lib/apt/lists/*

# Environment
ADD https://raw.githubusercontent.com/chohan/Linux-script/master/.bashrc /root/.
ADD https://raw.githubusercontent.com/chohan/Linux-script/master/.vimrc /root/.
#ADD https://raw.githubusercontent.com/chohan/Linux-script/master/.tmux.conf /root/.
COPY accs.df	/root/.
COPY accs.yml	/root/.
RUN echo "export ACCS_HOME=/ACCS" >> /etc/environment
#RUN echo "export GOROOT=/goroot" >> /etc/environment
#RUN echo "export PATH=$PATH:/d/Tools:/goroot/bin:/d/Tools/Oracle/instantclient_19_5" >> /etc/environment
RUN echo "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ACCS_HOME/sensor" >> /etc/environment
RUN mkdir -p /ACCS/{log, feeder, sensor, web}
RUN	echo "/bin/bash" >> /start.sh

EXPOSE 22
#ENTRYPOINT /start.sh
CMD /start.sh

########################################################
# docker build -f accs.df -t accs .
# docker-compose -f .\accs.yml up -d
# ssh -p 2251 root@192.168.99.107
# docker exec -it ACCS bash -c "source /root/.bashrc; bash"
# apt install ntp
# docker ps -a
# docker commit aa80343eb463 accs

